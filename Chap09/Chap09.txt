벡터는 주로 위치,방향,속도를 나타낸다.

상대좌표 : 현재좌표에서의 이동 
절대좌표 : 게임상에서의 좌표 

벡터의 크기는 음수가 될수 없다. 

벡터에 배수를 취하는 숫자를 곱할수 있다, / 스칼라곱이라고 부른다.

스칼라곱에 사용되는 스칼라 값은 기존 벡터를 늘리거나 줄이는 배율이다.
스칼라곱은 벡터의 크기는 늘리거나 줄일 수는 있어도 벡터의 방향은 변경할 수 없다. 

방향 * 속력 하면 이동할 좌표가 나온다

normalized Vector : 크기가 1인 방향 벡터 / 서로 다른 벡터를 비교하는 기준으로 삼을 수 있다.

벡터의 뺄셈을 하면 거리를 구할 수 있다.

벡터의 내적 : 점연산이라고도 부른다. / 지평선으로 끌어내리는 연산 / 자신과 상대방 사이의 각도가 벌어질수록 투영된 길이가 짧아지는 현상을 이용해 둘 사이의 각도를 구할 수 있다. / 연산결과가 숫자
벡터의 외적 : 벡터 곱 , 교차 곱 이라고도 부른다. / 연산결과가 벡터 / 연산결과를 뒤집으면 벡터의 방향이 반대가 된다. / 어떤 표면에 수직인 방향을 구할 수 있다. / 노말벡터 또는 법선 벡터라고 한다.

Vector3.normalized; >> 벡터와 방향은 같지만 크기가 1인 벡터 생성한다. 
Vector3.magnitude; >> 벡터의 크기(길이)를 구한다.
Vector3.Dot( a , b ) >> 벡터 b를 벡터 a로 투영한 길이를 구한다.
Vector3.Cross( a , b )>> 두 벡터 모두에 수직인 벡터를 구한다.

트랜스폼 컴포넌트의 rotation은 Vector3 값이 아닌 Quaternion이다.

3D 벡터를 사용해 3D 회전을 나타내는 표현을 오일러각이라고 한다. / 오일러각은 회전을 한번에 계산하지 않고 세번에 나누어서 계산하기 때문에 축이 겹치는 문제가 발생한다.
짐벌락 :  오일러 각으로 인해 세축중 한축의 회전을 사용할 수 없게되는 현상 

쿼터니언( Quaternion ) : 사원수라고 부르기도 한다 ( 값이 x,y,z,w 라서?? )/  한 번에 회전하는 방식 

Quaternion.Euler( Vector3 ) 값을 쿼터니언 타입의 변수에 담아서 그 변수의 eulerAngles 값을 Vector3 타입 변수에 담아주면 생성이 된다.

쿼터니언에서 a에서 b만큼 더 회전한  것은 덧셈이 아니라 곱셈으로 표현된다. / 쿼터니언 연산은 행렬을 사용하기 때문이다.